"""
Django settings for dj_pd project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import django_heroku
from pathlib import Path
import os
import environ
from distutils.util import strtobool




#Initialize environ

env = environ.Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = strtobool(env('DEBUG'))

ALLOWED_HOSTS = ['127.0.0.1','dhiren-kashiwale.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'django_heroku',
    'crispy_forms',
    'products',
    'csvs',
    'customers',
    'dj_pd',
    'main',
    'users',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

]

ROOT_URLCONF = 'dj_pd.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
#        'DIRS': [os.path.join(BASE_DIR / 'templates'),
#                os.path.join(BASE_DIR / 'csvs/templates'),
#                ],
        'DIRS':[],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                
            ],

        },
    },
]

WSGI_APPLICATION = 'dj_pd.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
if (strtobool(env('USEDEBUGDB'))):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

else:
    
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
	    'NAME': env('DBNAME'),
	    'USER': env('DBUSER'),
        'PASSWORD': env('DBPASSWORD'),
        'HOST': env('DBHOST'),
        'PORT': env('DBPORT'),
            }
        }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



STATIC_URL = '/static/'

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

STATIC_ROOT = os.path.join(BASE_DIR , 'static'  )

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static_project',BASE_DIR ,'staticfiles')
# ]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR ,'static_cdn'),
]

# STATIC_ROOT = os.path.join(os.path.dirname(
#     BASE_DIR), "static_cdn", "static_root")

# Media files(uploaded files)

MEDIA_URL = '/media/'

MEDIA_ROOT=os.path.join(BASE_DIR , 'media'  )

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

AWS_STORAGE_BUCKET_NAME=env('BUCKETEER_BUCKET_NAME')
AWS_SECRET_ACCESS_KEY=env('BUCKETEER_AWS_SECRET_ACCESS_KEY')
AWS_REGION=env('BUCKETEER_AWS_REGION')
AWS_ACCESS_KEY_ID=env('BUCKETEER_AWS_ACCESS_KEY_ID')

# MEDIA_ROOT = os.path.join(os.path.dirname(
#     BASE_DIR), "static_cdn", "media_root")

#Django Crispy Form Settings

CRISPY_TEMPLATE_PACK = 'bootstrap4'

django_heroku.settings(locals())
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
